import "module:std" as std

import { AuthEndpoint } from './segments/auth.ht'
import { AlbumEndpoint } from "./segments/album.ht"
import { ArtistEndpoint } from "./segments/artist.ht"
import { BrowseEndpoint } from "./segments/browse.ht"
import { PlaylistEndpoint } from './segments/playlist.ht'
import { SearchEndpoint } from './segments/search.ht'
import { TrackEndpoint } from './segments/track.ht'
import { UserEndpoint } from './segments/user.ht'
import { PluginUpdater } from './segments/updater.ht'

var Stream = std.Stream
var HttpClient = std.HttpClient
var HttpBaseOptions = std.HttpBaseOptions

class BrainzMetadataProviderPlugin {
  var auth: AuthEndpoint
  var album: AlbumEndpoint
  var artist: ArtistEndpoint
  var browse: BrowseEndpoint
  var playlist: PlaylistEndpoint
  var search: SearchEndpoint
  var track: TrackEndpoint
  var user: UserEndpoint
  var updater: PluginUpdater

  var lbApi: HttpClient
  var mbApi: HttpClient
  
  construct (){
    mbApi = HttpClient(
      HttpBaseOptions(
        baseUrl: "https://musicbrainz.org/ws/2"
      )
    )
    lbApi = HttpClient(
      HttpBaseOptions(
        baseUrl: "https://api.listenbrainz.org/1",
      )
    )
    
    auth = AuthEndpoint(lbApi, mbApi)
    updater = PluginUpdater(mbApi) // Just a generic [HttpClient]

    setAccessToken()
    auth.authStateStream.listen((event) {
      setAccessToken()
    })
  }

  fun setAccessToken() {
    lbApi = HttpClient(
      HttpBaseOptions(
        baseUrl: "https://api.listenbrainz.org/1",
        headers: auth.credentials == null ? null : {
          "Authorization": "Token ${auth.credentials['token']}"
        }.toJson()
      )
    )

    var username = auth.credentials == null ? null : auth.credentials['username']
    
    album = AlbumEndpoint(lbApi, mbApi, username)
    artist = ArtistEndpoint(lbApi, mbApi, username)
    browse = BrowseEndpoint(lbApi, mbApi, username)
    playlist = PlaylistEndpoint(lbApi, mbApi, username)
    search = SearchEndpoint(lbApi, mbApi, username)
    track = TrackEndpoint(lbApi, mbApi, username)
    user = UserEndpoint(lbApi, mbApi, username)
  }
}

export { TemplateMetadataProviderPlugin }